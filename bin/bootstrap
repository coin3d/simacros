#!/bin/sh

# Regenerate all files which are constructed by the autoconf, automake
# and libtool tool-chain. Note: only developers should need to use
# this script.

# Author: Morten Eriksen, <mortene@sim.no>.

SIMACROSDIR=`dirname $0`/..

wd=`echo "$0" | sed 's,[^\/]*$,,g'`;
me=`echo "$0" | sed 's,^.*/,,g'`;
cwd=`pwd`

cd $wd
if test ! -f ./"$me"; then
  echo >&2 "$me: error: unexpected problem with your shell - bailing out"
  exit 1
fi
cd $cwd

AUTOCONF_VER=2.5[023456789]
AUTOMAKE_VER=1.7.5
LIBTOOL_VER=1.5
GETTEXT_VER=0.10

AUTOMAKE_ADD=

#
# FIXME: Do we really want to do this automagically? (kintel 20020715)
#
#if test "$1" = "--clean"; then
#  rm -f aclocal.m4 \
#        config.h.in \
#        stamp-h*
#  ( cd cfg;
#    rm -f aclocal.m4 \
#          config.guess \
#          config.sub \
#          configure \
#          depcomp \
#          install-sh \
#          ltconfig \
#          ltmain.sh \
#          missing \
#          mkinstalldirs \
#          ltcf-*.sh
#  )
#  find . -name Makefile.in -print | grep -v "^./data/" | xargs rm -f
#  exit
#elif test "$1" = "--add"; then
#  AUTOMAKE_ADD="--add-missing --gnu --copy"
#fi

echo "Checking the installed configuration tools..."

if test -z "`autoconf --version 2>/dev/null | grep \" $AUTOCONF_VER\"`"; then
    echo ""
    echo "You must have autoconf version $AUTOCONF_VER installed to"
    echo "generate configure information and Makefiles."
    echo ""
    echo "Get ftp://ftp.gnu.org/gnu/autoconf/autoconf-$AUTOCONF_VER.tar.gz"
    DIE=true
fi

if test -z "`automake --version 2>/dev/null | grep \" $AUTOMAKE_VER\"`"; then
    echo ""
    echo "You must have automake version $AUTOMAKE_VER installed to"
    echo "generate configure information and Makefiles."
    echo ""
    echo "Get ftp://ftp.gnu.org/gnu/automake/automake-$AUTOMAKE_VER.tar.gz"
    DIE=true
fi

if test -z "`libtool --version 2>/dev/null | egrep \"$LIBTOOL_VER\"`"; then
    echo ""
    echo "You must have libtool version $LIBTOOL_VER installed to"
    echo "generate configure information and Makefiles."
    echo ""
    echo "Get ftp://ftp.gnu.org/gnu/libtool/libtool-$LIBTOOL_VER.tar.gz"
    DIE=true
fi

# abnormal exit?
${DIE=false} && echo "" && echo "Aborted." && exit 1

# **************************************************************************

echo "Copying simacros files ..."

# These are part of all projects.
for i in cfg/config.guess cfg/config.sub cfg/depcomp cfg/install-sh \
         cfg/missing cfg/mkinstalldirs src/wrapmsvc.exe \
         doc/errors.txt cfg/gendsp.sh bin/doxy4win.pl
do
  src=$SIMACROSDIR/$i
  dst=$cwd/cfg/`basename $i`
  if ! cmp -s $src $dst; then
    echo "cp $src $dst"
    cp $src $dst
  fi
done

# Then the files that are only part of some projects.
for i in cfg/m4/simage.m4 cfg/m4/coin.m4 \
         cfg/m4/sowin.m4 cfg/m4/soxt.m4 cfg/m4/sogtk.m4 cfg/m4/soqt.m4
do
  src=$SIMACROSDIR/$i
  dst=$cwd/cfg/`basename $i`
  if test -e $dst; then
    if ! cmp -s $src $dst; then
      echo "cp $src $dst"
      cp $src $dst
    fi
  fi
done

# **************************************************************************

MACRODIR=$SIMACROSDIR/cfg/m4
echo "Running aclocal -I $MACRODIR (generating $cwd/aclocal.m4)..."
rm -f aclocal.m4.old
test -f aclocal.m4 && mv aclocal.m4 aclocal.m4.old
aclocal -I $MACRODIR
if test $? -ne 0; then exit 1; fi
if test -f aclocal.m4.old; then
  if cmp -s aclocal.m4 aclocal.m4.old; then
    echo "aclocal: aclocal.m4 is unchanged"
    rm -f aclocal.m4
    mv aclocal.m4.old aclocal.m4
  else
    rm -f aclocal.m4.old
  fi
fi

CONFIGURESCRIPT=configure.in
if test -f configure.ac; then CONFIGURESCRIPT=configure.ac; fi

grep -q AC_PROG_LIBTOOL $CONFIGURESCRIPT
if test $? -eq 0; then copylt=true; else copylt=false; fi
if $copylt; then
  echo "libtoolize..."
  # This copies in ltmain.sh and ltconfig.
  libtoolize --automake --copy --force || exit 1

# Local Libtool patches.
( cd $cwd/cfg/;
  test -f ltmain.sh.diff && patch -p0 < ltmain.sh.diff
  test -f ltconfig.diff  && patch -p0 < ltconfig.diff
)

fi

# Generate gettext support. Necessary for SoGtk.
if test -d intl
then
  if test -z "`gettextize --version | grep \" $GETTEXT_VER\" 2> /dev/null`"; then
    cat <<END
You must have gettextize version $GETTEXT_VER installed to
generate gettext support files.
END
    exit 1
  fi

  echo "Running gettextize..."
  ( (
    bakdir=intl-bak.$$
    mkdir $bakdir || exit 1
    cp intl/.cvsignore intl/CVS/* $bakdir
    gettextize -f -c 1>&3 && \
    cp po/Makefile.in.in po/Makefile.in.in~ && \
    sed \
        -e 's%\$(top_srcdir)/mkinstalldirs%\$(top_srcdir)/cfg/mkinstalldirs%g' \
        -e 's%MKINSTALLDIRS =.*$%MKINSTALLDIRS = \$(top_srcdir)/cfg/mkinstalldirs%' \
        -e 's%--add-comments %%' \
        -e 's%--files-from%-C --files-from%' \
  	< po/Makefile.in.in > po/Makefile.in.in~ && \
    mv po/Makefile.in.in~ po/Makefile.in.in
    cp $bakdir/.cvsignore intl/
    rm $bakdir/.cvsignore
    mkdir intl/CVS
    cp $bakdir/* intl/CVS/
    rm $bakdir/*
    rmdir $bakdir
  ) 3>&1 1>&2 2>&3 | \
    grep -v 'adding the necessary$' | \
    grep -v 'progtest.m4 from$' | \
    grep -v '^the directory ' \
  ) 3>&1 1>&2 2>&3 || exit 1
fi

echo "Running autoheader (generating config.h.in)..."
autoheader || exit 1

echo "Running automake (generating the Makefile.in files)..."
# FIXME: should investigate if we can fix the Automake warnings
# we get, instead of hiding them with grep. 20030522 mortene.
( automake $AUTOMAKE_ADD 3>&1 1>&2 2>&3 | \
  grep -v -e 'not a standard library name' \
          -e 'created both with libtool and without') 3>&1 1>&2 2>&3 || exit 1

echo "Running autoconf (generating the configure script)..."
( autoconf 3>&1 1>&2 2>&3 | grep -v AR_FLAGS) 3>&1 1>&2 2>&3 || exit 1

echo "Done."

